{"version":3,"sources":["../../../node_modules/fab.controller/src/FAB.controller.js","../../../assetsSource/js/controllers/ScriptSets.js","../../../assetsSource/js/main.js","../../../node_modules/fab.grunt-build/src/js/fab.js","../../../node_modules/fab.model/src/FAB.model.js","../../../assetsSource/js/setup.js"],"names":["runFabController","F","undefined","window","jQuery","setTimeout","constructors","constructed","createConstructor","fn","obj","constructor","optObj","i","ControllerModel","thisObj","this","newObj","$","extend","hasOwnProperty","el","$el","get","HTMLElement","model","validateGuid","guid","make","init","Array","prototype","shift","apply","arguments","events","key","callback","on","split","controller","construct","name","constructedObj","Function","bind","push","runEditScriptSet","W","fabDependenciesLoaded","click .js-add-script","self","ajax","url","success","html","find","append","click .js-remove-script","e","currentTarget","$script","closest","val","hide","runMain","each","FAB","guids","s4","Math","floor","random","toString","substring","createModelConstructor","attrs","initialValues","properties","propertyTypes","changeEvents","prop","parseInt","parseFloat","String","Object","set","args","changed","oldVal","forEach","onChange","noNameSpace","offChange","indexOf","doT"],"mappings":"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","file":"script.min.js","sourcesContent":["/*----------------------------------------------------------------------------*\\\n    # Copyright 2017, BuzzingPixel, LLC\n\n    # This program is free software: you can redistribute it and/or modify\n    # it under the terms of the Apache License 2.0.\n    # http://www.apache.org/licenses/LICENSE-2.0\n\\*----------------------------------------------------------------------------*/\n\n// Make sure FAB is defined\nwindow.FAB = window.FAB || {};\n\n// Set up fab controller\nfunction runFabController(F) {\n    'use strict';\n\n    if (window.jQuery === undefined) {\n        setTimeout(function() {\n            runFabController(F);\n        }, 10);\n        return;\n    }\n\n    var jQuery = window.jQuery;\n\n    // A place to store constructors\n    var constructors = {};\n\n    // A place to store constructed objects\n    var constructed = [];\n\n    /**\n     * Make a controller constructor\n     *\n     * @param {String|Object} fn - Name of constructor or options to return constructor only\n     * @param {Object} obj - Options\n     * @return {constructor}\n     */\n    var createConstructor = function(fn, obj) {\n        // Constructor variable\n        var constructor;\n\n        // Determine type of first argument\n        if (typeof fn === 'object') {\n            obj = fn;\n            fn = null;\n        } else if (typeof fn !== 'string') {\n            obj = {};\n            fn = null;\n        }\n\n        /**\n         * Create a constructor\n         *\n         * @param {Object|boolean|null} optObj\n         */\n        constructor = function(optObj) {\n            // Set a variable for this\n            var thisObj = this;\n\n            // Clone the object\n            var newObj = $.extend(true, {}, obj);\n\n            // Set iterator key\n            var i;\n\n            // Set model var\n            var ControllerModel;\n\n            // Loop through the options and set them\n            for (i in newObj) {\n                if (newObj.hasOwnProperty(i)) {\n                    thisObj[i] = newObj[i];\n                }\n            }\n\n            // Loop through incoming options and set them\n            if (typeof optObj === 'object') {\n                for (i in optObj) {\n                    if (optObj.hasOwnProperty(i)) {\n                        thisObj[i] = optObj[i];\n                    }\n                }\n            }\n\n            // Check if el or $el has been set\n            if (! thisObj.el) {\n                thisObj.$el = $('<div></div>');\n                thisObj.el = thisObj.$el.get(0);\n\n                // If the incoming el is a string, use as selector\n            } else if (typeof thisObj.el === 'string') {\n                thisObj.$el = $(thisObj.el);\n                thisObj.el = thisObj.$el.get(0);\n\n                // Check if the incoming el is a jQuery object\n            } else if (thisObj.el instanceof jQuery) {\n                thisObj.$el = thisObj.el;\n                thisObj.el = thisObj.$el.get(0);\n\n                // Check if the incoming el is a DOM object\n            } else if (thisObj.el instanceof HTMLElement) {\n                thisObj.$el = $(thisObj.el);\n            }\n\n            // Check if model is set\n            if (typeof thisObj.model === 'object' && typeof F.model !== 'undefined') {\n                if (! F.model.validateGuid(thisObj.model.guid)) {\n                    ControllerModel = F.model.make(thisObj.model);\n                    thisObj.model = new ControllerModel();\n                }\n            } else if (this.model !== undefined) {\n                thisObj.model = null;\n            }\n\n            // Check for init\n            if (typeof thisObj.init === 'function') {\n                // Remove the first argument from the arguments\n                Array.prototype.shift.apply(arguments);\n\n                // Run the init function\n                thisObj.init.apply(thisObj, arguments);\n            }\n\n            // Check if there are events\n            if (typeof thisObj.events === 'object') {\n                // Loop through the events\n                for (i in thisObj.events) {\n                    if (\n                        // Make sure the object has own property\n                    thisObj.events.hasOwnProperty(i) &&\n                    // Make sure the value is a callable function\n                    typeof thisObj.events[i] === 'function'\n                    ) {\n                        // Enclose in a function so we have immutable vars\n                        (function(key, callback) {\n                            if (key[1]) {\n                                thisObj.$el.on(key[0], key[1], function() {\n                                    callback.apply(thisObj, arguments);\n                                });\n                            } else {\n                                thisObj.$el.on(key[0], function() {\n                                    callback.apply(thisObj, arguments);\n                                });\n                            }\n                        })(i.split(' '), thisObj.events[i]);\n                    }\n                }\n            }\n        };\n\n        // If a name has been defined for this constructor, add it\n        if (fn) {\n            constructors[fn] = constructor;\n        }\n\n        // Return the constructor\n        return constructor;\n    };\n\n    /**\n     * Controller API\n     */\n    F.controller = {\n        /**\n         * Make a controller constructor\n         * @return {constructor}\n         */\n        make: function() {\n            return createConstructor.apply(createConstructor, arguments);\n        },\n\n        /**\n         * Construct a new object from a constructor\n         *\n         * @param {String} name\n         */\n        construct: function(name) {\n            // Set a variable for the constructed object\n            var constructedObj;\n\n            // Make sure the constructor exists\n            if (typeof constructors[name] !== 'function') {\n                return null;\n            }\n\n            // Run the constructor\n            constructedObj = new (Function.prototype.bind.apply(\n                    constructors[name], arguments)\n            )();\n\n            // Push the constructor into the array of constructed objects\n            constructed.push(constructedObj);\n\n            // Return the constructed object\n            return constructedObj;\n        }\n    };\n}\n\n// Run fab controller set up\nrunFabController(window.FAB);\n","function runEditScriptSet(F, W) {\n    'use strict';\n\n    // Make sure Fabricator has been fully loaded\n    if (! W.fabDependenciesLoaded()) {\n        setTimeout(function() {\n            runEditScriptSet(F, W);\n        }, 10);\n        return;\n    }\n\n    // Create the controller\n    F.controller.make('EditScriptSet', {\n        events: {\n            'click .js-add-script': function() {\n                // Save a reference to the controller\n                var self = this;\n\n                $.ajax({\n                    url: '/servers/scripts/script-template',\n                    success: function(html) {\n                        self.$el.find('.js-scripts-container').append(html);\n                    }\n                });\n            },\n            'click .js-remove-script': function(e) {\n                var $el = $(e.currentTarget);\n                var $script = $el.closest('.js-script');\n                $script.find('.js-script-delete').val('true');\n                $script.hide();\n            }\n        }\n    });\n}\n\nrunEditScriptSet(window.FAB, window);\n","// This file is run after everything else\n\nfunction runMain(F, W) {\n    'use strict';\n\n    // Make sure Fabricator has been fully loaded\n    if (! W.fabDependenciesLoaded()) {\n        setTimeout(function() {\n            runMain(F, W);\n        }, 10);\n        return;\n    }\n\n    // Run script sets on page\n    $('.js-edit-script-set').each(function() {\n        F.controller.construct('EditScriptSet', {\n            el: this\n        });\n    });\n}\n\nrunMain(window.FAB, window);\n","/*----------------------------------------------------------------------------*\\\n    # Copyright 2017, BuzzingPixel, LLC\n\n    # This program is free software: you can redistribute it and/or modify\n    # it under the terms of the Apache License 2.0.\n    # http://www.apache.org/licenses/LICENSE-2.0\n\\*----------------------------------------------------------------------------*/\n\n// Make sure FAB is defined\nwindow.FAB = window.FAB || {};\n","/*----------------------------------------------------------------------------*\\\n    # Copyright 2017, BuzzingPixel, LLC\n\n    # This program is free software: you can redistribute it and/or modify\n    # it under the terms of the Apache License 2.0.\n    # http://www.apache.org/licenses/LICENSE-2.0\n\\*----------------------------------------------------------------------------*/\n\n// Make sure FAB is defined\nwindow.FAB = window.FAB || {};\n\n(function(F) {\n    'use strict';\n\n    // A place to store GUIDs\n    var guids = [];\n\n    // Create GUID\n    var guid = function() {\n        var s4 = function() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        };\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    };\n\n    /**\n     * Make a model constructor\n     *\n     * @param {Object} attrs\n     */\n    var createModelConstructor = function(attrs) {\n        // Set a variable for the constructor\n        var constructor;\n\n        // Make sure attrs is an object\n        if (typeof attrs !== 'object') {\n            attrs = {};\n        }\n\n        // Define the constructor\n        constructor = function(initialValues) {\n            // Set a local variable for this\n            var thisObj = this;\n\n            // Set GUID\n            thisObj.guid = guid();\n\n            // Push the GUID\n            guids.push(thisObj.guid);\n\n            // Set up properties\n            thisObj.properties = {};\n\n            // Set up property types\n            thisObj.propertyTypes = attrs;\n\n            // Set up change events\n            thisObj.changeEvents = {};\n\n            // Loop through property types and set change events objects\n            for (var prop in thisObj.propertyTypes) {\n                if (thisObj.propertyTypes.hasOwnProperty(prop)) {\n                    thisObj.changeEvents[prop] = {};\n                }\n            }\n\n            // Set any initial values\n            for (var i in initialValues) {\n                if (initialValues.hasOwnProperty(i)) {\n                    if (thisObj.propertyTypes[i] !== undefined) {\n                        thisObj.properties[i] = initialValues[i];\n                    }\n                }\n            }\n        };\n\n        // Set prototype methods\n        constructor.prototype = {\n            get: function(name) {\n                var model = this;\n\n                if (model.properties[name]) {\n                    if (model.propertyTypes[name] === 'int') {\n                        return parseInt(model.properties[name]);\n                    } else if (model.propertyTypes[name] === 'float') {\n                        return parseFloat(model.properties[name]);\n                    } else if (model.propertyTypes[name] === 'string') {\n                        return String(model.properties[name]);\n                    } else if (model.propertyTypes[name] === 'bool') {\n                        return model.properties[name] === true;\n                    } else if (model.propertyTypes[name] === 'array') {\n                        if (model.properties[name].constructor === Array) {\n                            return model.properties[name];\n                        } else {\n                            return [];\n                        }\n                    } else if (model.propertyTypes[name] === 'object') {\n                        if (model.properties[name].constructor === Object) {\n                            return model.properties[name];\n                        } else {\n                            return {};\n                        }\n                    } else {\n                        return null;\n                    }\n                } else {\n                    if (\n                        model.propertyTypes[name] === 'int' ||\n                        model.propertyTypes[name] === 'float'\n                    ) {\n                        return 0;\n                    } else if (model.propertyTypes[name] === 'string') {\n                        return '';\n                    } else if (model.propertyTypes[name] === 'bool') {\n                        return false;\n                    } else if (model.propertyTypes[name] === 'array') {\n                        return [];\n                    } else if (model.propertyTypes[name] === 'object') {\n                        return {};\n                    } else {\n                        return null;\n                    }\n                }\n            },\n            set: function(name, val) {\n                var model = this;\n                var changed = false;\n                var oldVal = model.properties[name];\n                var args;\n\n                if (model.propertyTypes[name] === 'int') {\n                    model.properties[name] = parseInt(val);\n                    changed = true;\n                } else if (model.propertyTypes[name] === 'float') {\n                    model.properties[name] = parseFloat(val);\n                    changed = true;\n                } else if (model.propertyTypes[name] === 'string') {\n                    model.properties[name] = String(val);\n                    changed = true;\n                } else if (model.propertyTypes[name] === 'bool') {\n                    model.properties[name] = val === true || val === 'true' || val === 'yes' || val === 'y';\n                    changed = true;\n                } else if (model.propertyTypes[name] === 'array') {\n                    if (val.constructor === Array) {\n                        model.properties[name] = val;\n                        changed = true;\n                    }\n                } else if (model.propertyTypes[name] === 'object') {\n                    if (val.constructor === Object) {\n                        model.properties[name] = val;\n                        changed = true;\n                    }\n                }\n\n                if (! changed || oldVal === model.properties[name] || model.changeEvents[name] === undefined) {\n                    return;\n                }\n\n                args = [\n                    model.properties[name],\n                    oldVal\n                ];\n\n                for (var i in model.changeEvents[name]) {\n                    model.changeEvents[name][i].forEach(function(callback) {\n                        callback.apply(callback, args);\n                    });\n                }\n            },\n            onChange: function(name, callback) {\n                var model = this;\n                var key = name.split('.');\n\n                if (model.propertyTypes[key[0]] !== undefined) {\n                    if (key[1] === undefined) {\n                        if (model.changeEvents[key[0]].noNameSpace === undefined) {\n                            model.changeEvents[key[0]].noNameSpace = [];\n                        }\n\n                        model.changeEvents[key[0]].noNameSpace.push(callback);\n                    } else {\n                        if (model.changeEvents[key[0]][key[1]] === undefined) {\n                            model.changeEvents[key[0]][key[1]] = [];\n                        }\n\n                        model.changeEvents[key[0]][key[1]].push(callback);\n                    }\n                }\n            },\n            offChange: function(name) {\n                var model = this;\n                var key = name.split('.');\n\n                if (key[1] === undefined) {\n                    model.changeEvents[key[0]] = {};\n                } else {\n                    delete model.changeEvents[key[0]][key[1]];\n                }\n            }\n        };\n\n        // Return the constructor\n        return constructor;\n    };\n\n    /**\n     * Model API\n     */\n    F.model = {\n        /**\n         * Make a model constructor\n         */\n        make: function() {\n            return createModelConstructor.apply(\n                createModelConstructor,\n                arguments\n            );\n        },\n\n        /**\n         * Validate GUID\n         *\n         * @param {String} guid\n         */\n        validateGuid: function(guid) {\n            return guids.indexOf(guid) > -1;\n        }\n    };\n})(window.FAB);\n","// Anything in this file will be run before the rest of your custom files\n\nwindow.fabDependenciesLoaded = function() {\n    'use strict';\n\n    return window.FAB.controller !== undefined &&\n        window.$ !== undefined &&\n        window.doT !== undefined;\n};\n"]}